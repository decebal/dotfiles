# Add deno completions to search path
if [[ ":$FPATH:" != *":/Users/decebaldobrica/.zsh/completions:"* ]]; then export FPATH="/Users/decebaldobrica/.zsh/completions:$FPATH"; fi
# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
#!/bin/zsh
#Path to your oh-my-zsh configuration.

DOTFILES=$HOME/.dotfiles
ZSH=$DOTFILES/zsh/oh-my-zsh

# Load master config first if it exists
if [ -f $DOTFILES/local/master-config.sh ]; then
	. $DOTFILES/local/master-config.sh
fi

# Load common paths
if [ -f $DOTFILES/common/paths ]; then
	. $DOTFILES/common/paths
fi

# Detect AI Agent context and load appropriate configuration
# Supports multiple AI environments: Cursor, GitHub Copilot, Windsurf, etc.
if [[ -n "$CURSOR_AGENT" ]] || [[ -n "$GITHUB_COPILOT_AGENT" ]] || [[ -n "$AI_AGENT" ]] || [[ -n "$WINDSURF_PID" ]] || [[ -n "$VSCODE_PID" ]]; then
    # Load minimal agent-optimized configuration
    export AI_AGENT_CONTEXT=1
    if [ -f $DOTFILES/common/zsh-agent-config ]; then
        . $DOTFILES/common/zsh-agent-config
    fi
else
    # Load full-featured normal configuration
    zsh_theme="powerline"
    if [ -f $DOTFILES/common/zsh-normal-config ]; then
        . $DOTFILES/common/zsh-normal-config
    else
        # Fallback to original config if new one doesn't exist
        if [ -f $DOTFILES/common/zsh-config ]; then
            . $DOTFILES/common/zsh-config
        fi
    fi
fi

# Alias definitions.
if [ -f $DOTFILES/common/aliases ]; then
. $DOTFILES/common/aliases
fi

if [ -f $DOTFILES/common/functions ]; then
    . $DOTFILES/common/functions
fi


umask 0002
export TERM="xterm-256color"

export PATH="$HOME/.yarn/bin:$PATH"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Load prompt theme (oh-my-posh or oh-my-zsh) - resolves conflicts automatically
# This should be loaded AFTER oh-my-zsh to properly override themes
if [[ -z "$AI_AGENT_CONTEXT" ]]; then
    # Source performance optimizations
    if [ -f $DOTFILES/common/shell-performance.sh ]; then
        . $DOTFILES/common/shell-performance.sh
    fi

    # Setup the prompt theme (handles oh-my-posh vs oh-my-zsh conflict)
    if command -v oh-my-posh &>/dev/null && [ -z "$DISABLE_OH_MY_POSH" ] && [ -f ~/.poshthemes/material.omp.json ]; then
        # Oh-my-posh takes precedence when available
        eval "$(oh-my-posh init zsh --config ~/.poshthemes/material.omp.json)"
    fi
    # Note: If oh-my-posh is not used, oh-my-zsh theme from zsh-normal-config will be active
fi

# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# pnpm
export PNPM_HOME="/Users/decebaldobrica/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/homebrew/bin/terraform terraform

export PATH="$PATH:/Users/decebaldobrica/.cyfrin/bin"

[[ -s "/Users/decebaldobrica/.gvm/scripts/gvm" ]] && source "/Users/decebaldobrica/.gvm/scripts/gvm"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/decebaldobrica/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

# Added by Windsurf
export PATH="/Users/decebaldobrica/.codeium/windsurf/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - zsh)"

# bum
export BUM_INSTALL="$HOME/.bum"
export PATH="$BUM_INSTALL/bin:$PATH"

# bun completions
[ -s "/Users/decebaldobrica/.bun/_bun" ] && source "/Users/decebaldobrica/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
. "/usr/local/env"
# Initialize zsh completions (added by deno install script)
autoload -Uz compinit
compinit

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/opt/homebrew/share/google-cloud-sdk/path.zsh.inc' ]; then . '/opt/homebrew/share/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/opt/homebrew/share/google-cloud-sdk/completion.zsh.inc' ]; then . '/opt/homebrew/share/google-cloud-sdk/completion.zsh.inc'; fi

