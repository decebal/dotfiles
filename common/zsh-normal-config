#!/bin/zsh
# ZSH Configuration for Normal Interactive Mode
# Oh-My-Posh focused configuration with essential shell features

# Load local setup if exists
if [ -f $DOTFILES/local/zsh-setup ]; then
	. $DOTFILES/local/zsh-setup
fi

# SSH agent configuration
if [ "$is_server" = true ]; then
    eval $(ssh-agent)
    /usr/bin/ssh-add
fi

export LS_OPTIONS='--color=auto'
COMPLETION_WAITING_DOTS="true"

# Load local config if exists
if [ -f $DOTFILES/local/zsh-config ]; then
	. $DOTFILES/local/zsh-config
fi

# Essential zsh options for interactive use
setopt AUTO_CD              # Change directory just by typing its name
setopt INTERACTIVE_COMMENTS # Allow comments in interactive mode
setopt HIST_VERIFY         # Show command with history expansion to user before running it
setopt SHARE_HISTORY       # Share command history data
setopt HIST_IGNORE_SPACE   # Don't record commands that start with space
setopt HIST_IGNORE_DUPS    # Don't record duplicates in history
setopt COMPLETE_IN_WORD    # Complete from both ends of a word
setopt ALWAYS_TO_END       # Move cursor to the end of a completed word
setopt PATH_DIRS           # Perform path search even on command names with slashes
setopt AUTO_MENU           # Automatically use menu completion
setopt AUTO_LIST           # Automatically list choices on ambiguous completion
setopt AUTO_PARAM_SLASH    # If completed parameter is a directory, add a trailing slash

# History settings
HISTSIZE=50000
SAVEHIST=10000
HISTFILE=~/.zsh_history

# Enhanced completions
autoload -U compinit
compinit

# Git completions
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git*' formats " %b"
precmd() {
    vcs_info
}

# Add completions
fpath=($DOTFILES/zsh-completions/src $fpath)

# Enhanced history search with arrow keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search   # Up arrow
bindkey "^[[B" down-line-or-beginning-search # Down arrow

# Better directory navigation
setopt AUTO_PUSHD        # Push directories onto stack automatically
setopt PUSHD_IGNORE_DUPS # Don't duplicate directories in stack
setopt PUSHD_SILENT      # Don't print directory stack after pushd/popd


# Load useful zsh plugins
if [ -f $DOTFILES/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    source $DOTFILES/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

if [ -f $DOTFILES/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    source $DOTFILES/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"
fi

# k git-zsh list directory plugin
if [ -f $DOTFILES/zsh/k/k.sh ]; then
    source $DOTFILES/zsh/k/k.sh
fi

# Initialize zoxide (smart directory jumping)
if command -v zoxide &> /dev/null; then
    eval "$(zoxide init zsh)"
fi

# Initialize fzf (fuzzy finder)
if command -v fzf &> /dev/null; then
    # Key bindings (Ctrl+R for history, Ctrl+T for files, Alt+C for cd)
    source <(fzf --zsh)

    # fzf configuration
    export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border --inline-info"
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'

    # Use fd for fzf path completion
    _fzf_compgen_path() {
        fd --hidden --follow --exclude ".git" . "$1"
    }
    _fzf_compgen_dir() {
        fd --type d --hidden --follow --exclude ".git" . "$1"
    }
fi

# Initialize atuin (smart history)
if command -v atuin &> /dev/null; then
    eval "$(atuin init zsh)"
fi

export EDITOR=vim